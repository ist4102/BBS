{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['mentions/fragments/PostQuoteButton']\"","webpack://@the-turk/flarum-mathren/webpack/bootstrap","webpack://@the-turk/flarum-mathren/webpack/runtime/compat get default export","webpack://@the-turk/flarum-mathren/webpack/runtime/define property getters","webpack://@the-turk/flarum-mathren/webpack/runtime/hasOwnProperty shorthand","webpack://@the-turk/flarum-mathren/webpack/runtime/make namespace object","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/extend']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/app']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/components/Page']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/components/TextEditor']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/components/DiscussionPage']\"","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/copyDelimiters.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/katex2tex.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/getPrimaryDelimiters.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/setKatexRange.js","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/components/CommentPost']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['components/TextEditor']\"","webpack://@the-turk/flarum-mathren/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/components/Button']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/Component']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/utils/ItemList']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['forum/components/DiscussionComposer']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['forum/components/EditPostComposer']\"","webpack://@the-turk/flarum-mathren/external root \"flarum.core.compat['forum/components/ReplyComposer']\"","webpack://@the-turk/flarum-mathren/./src/forum/utils/getFlarumComposers.js","webpack://@the-turk/flarum-mathren/./src/forum/components/TextEditorButton.js","webpack://@the-turk/flarum-mathren/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/splitAtDelimiters.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/katex/delimiterReplacer.js","webpack://@the-turk/flarum-mathren/./src/forum/index.js","webpack://@the-turk/flarum-mathren/./src/forum/addPostQuoteButton.js","webpack://@the-turk/flarum-mathren/./src/forum/utils/mentions/selectedText.js","webpack://@the-turk/flarum-mathren/./src/forum/addTextEditorButton.js","webpack://@the-turk/flarum-mathren/./src/forum/addCopyListener.js"],"sourcesContent":["module.exports = flarum.core.compat['mentions/fragments/PostQuoteButton'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Page'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/TextEditor'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/DiscussionPage'];","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n// Define delimiters those will be used in `copy-tex` plugin\n// see https://github.com/KaTeX/KaTeX/blob/master/contrib/copy-tex/katex2tex.js#L1-L5\nexport default function copyDelimiters(delimiters) {\n  return {\n    inline: [delimiters.inline.left, delimiters.inline.right],\n    display: [delimiters.block.left, delimiters.block.right],\n  };\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\n// Replace .katex elements with their TeX source (<annotation> element).\n// Modifies fragment in-place.  Useful for writing your own 'copy' handler,\n// as in copy-tex.js.\nexport const katexReplaceWithTex = function (fragment, copyDelimiters) {\n  // Remove .katex-html blocks that are preceded by .katex-mathml blocks\n  // (which will get replaced below).\n  const katexHtml = fragment.querySelectorAll('.katex-mathml + .katex-html');\n  for (let i = 0; i < katexHtml.length; i++) {\n    const element = katexHtml[i];\n    if (element.remove) {\n      element.remove();\n    } else if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  // Replace .katex-mathml elements with their annotation (TeX source)\n  // descendant, with inline delimiters.\n  const katexMathml = fragment.querySelectorAll('.katex-mathml');\n  for (let i = 0; i < katexMathml.length; i++) {\n    const element = katexMathml[i];\n    const texSource = element.querySelector('annotation');\n    if (texSource) {\n      if (element.replaceWith) {\n        element.replaceWith(texSource);\n      } else if (element.parentNode) {\n        element.parentNode.replaceChild(texSource, element);\n      }\n      texSource.innerHTML = copyDelimiters.inline[0] + texSource.innerHTML + copyDelimiters.inline[1];\n    }\n  }\n\n  // Switch display math to display delimiters.\n  const displays = fragment.querySelectorAll('.katex-display annotation');\n  for (let i = 0; i < displays.length; i++) {\n    const element = displays[i];\n    element.innerHTML =\n      copyDelimiters.display[0] +\n      element.innerHTML.substr(\n        copyDelimiters.inline[0].length,\n        element.innerHTML.length - copyDelimiters.inline[0].length - copyDelimiters.inline[1].length\n      ) +\n      copyDelimiters.display[1];\n  }\n\n  return fragment;\n};\n\nexport default katexReplaceWithTex;\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\n/**\n * Get the primary delimiters that'll be used by text editor buttons,\n * copy-tex plugin, `EditPostComposer` etc.\n *\n * @param forum   Must be equal to `app.forum`. Used for retrieving settings.\n * @param reverse To return the primary BBCode delimiters no matter what.\n *\n * @return { Object }\n */\nexport default function getPrimaryDelimiters(forum, reverse = false) {\n  if (forum.attribute('mathren.aliases_as_primary') && reverse === false) {\n    return {\n      inline: forum.attribute('mathren.primary_inline_delimiter_alias'),\n      block: forum.attribute('mathren.primary_block_delimiter_alias'),\n    };\n  }\n\n  return {\n    inline: forum.attribute('mathren.primary_inline_delimiter'),\n    block: forum.attribute('mathren.primary_block_delimiter'),\n  };\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\nfunction closestKatex(node) {\n  // If node is a Text Node, for example, go up to containing Element,\n  // where we can apply the `closest` method.\n  const element = node instanceof Element ? node : node.parentElement;\n  return element && element.closest('.katex');\n}\n\nexport default function setKatexRange(range) {\n  // When start point is within a formula, expand to entire formula.\n  const startKatex = closestKatex(range.startContainer);\n  if (startKatex) {\n    range.setStartBefore(startKatex);\n  }\n\n  // Similarly, when end point is within a formula, expand to entire formula.\n  const endKatex = closestKatex(range.endContainer);\n  if (endKatex) {\n    range.setEndAfter(endKatex);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['components/TextEditor'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/ItemList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/EditPostComposer'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/ReplyComposer'];","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport DiscussionComposer from 'flarum/forum/components/DiscussionComposer';\nimport EditPostComposer from 'flarum/forum/components/EditPostComposer';\nimport ReplyComposer from 'flarum/forum/components/ReplyComposer';\n\n/**\n * Returns a list of native Flarum composer components.\n * This list will be used to determine if a composer\n * defined by a third-party extension.\n *\n * @return { Array }\n */\nexport default function getFlarumComposers() {\n  return [DiscussionComposer, EditPostComposer, ReplyComposer];\n}\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/common/app';\n\nimport Button from 'flarum/common/components/Button';\nimport Component from 'flarum/common/Component';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport icon from 'flarum/common/helpers/icon';\n\nimport getPrimaryDelimiters from '../utils/katex/getPrimaryDelimiters';\nimport getFlarumComposers from '../utils/getFlarumComposers';\n\nexport default class TextEditorButton extends Component {\n  view() {\n    return Dropdown.component(\n      {\n        className: 'MathRen-buttonsDropdown',\n        buttonClassName: 'Button Button--flat',\n        label: icon('fas fa-square-root-alt'),\n      },\n      this.items().toArray()\n    );\n  }\n\n  /**\n   * Build an item list for the contents of the dropdown menu.\n   *\n   * @return {ItemList}\n   */\n  items() {\n    const items = new ItemList();\n\n    items.add(\n      'mathren-blockButton',\n      Button.component(\n        {\n          icon: 'fas fa-vector-square',\n          onclick: () => this.wrapSelection(true),\n        },\n        app.translator.trans('the-turk-mathren.forum.composer.block_expression')\n      ),\n      50\n    );\n\n    items.add(\n      'mathren-inlineButton',\n      Button.component(\n        {\n          icon: 'fas fa-grip-lines',\n          onclick: () => this.wrapSelection(),\n        },\n        app.translator.trans('the-turk-mathren.forum.composer.inline_expression')\n      ),\n      0\n    );\n\n    return items;\n  }\n\n  /**\n   * Wrap the current selection with BBCode tags.\n   * If there's no selection, put them around the cursor.\n   *\n   * @param displayMode Whether this button is used for block or inline expressions.\n   */\n  wrapSelection(displayMode = false) {\n    const composerClass = app.composer.body.componentClass;\n\n    // Get primary delimiters based on the `aliases_as_primary` setting.\n    // If this isn't a native Flarum composer (i.e. it created by an extension),\n    // then we will use BBCode delimiters no matter what because we're\n    // replacing alias delimiters on the fly. This causing wrong cursor location.\n    this.delimiters = getPrimaryDelimiters.bind(this, app.forum, getFlarumComposers().indexOf(composerClass) === -1)();\n\n    // opening tag (left delimiter)\n    const leftDelim = displayMode ? this.delimiters.block['left'] : this.delimiters.inline['left'];\n\n    // closing tag (right delimiter)\n    const rightDelim = displayMode ? this.delimiters.block['right'] : this.delimiters.inline['right'];\n\n    const selectionRange = this.attrs.textEditor.getSelectionRange();\n\n    if (selectionRange[0] != selectionRange[1]) {\n      this.attrs.textEditor.insertAt(selectionRange[0], leftDelim);\n      this.attrs.textEditor.insertAt(selectionRange[1] + leftDelim.length, rightDelim);\n    } else {\n      this.attrs.textEditor.replaceBeforeCursor(selectionRange[0], leftDelim + rightDelim);\n      this.attrs.textEditor.moveCursorTo(selectionRange[0] + leftDelim.length);\n    }\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\nconst findEndOfMath = function (delimiter, text, startIndex) {\n  // Adapted from\n  // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n  let index = startIndex;\n  let braceLevel = 0;\n\n  const delimLength = delimiter.length;\n\n  while (index < text.length) {\n    const character = text[index];\n\n    if (braceLevel <= 0 && text.slice(index, index + delimLength) === delimiter) {\n      return index;\n    } else if (character === '\\\\') {\n      index++;\n    } else if (character === '{') {\n      braceLevel++;\n    } else if (character === '}') {\n      braceLevel--;\n    }\n\n    index++;\n  }\n\n  return -1;\n};\n\nconst escapeRegex = function (string) {\n  return string.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\nconst amsRegex = /^\\\\begin{/;\n\nconst splitAtDelimiters = function (text, delimiters) {\n  let index;\n  const data = [];\n\n  const regexLeft = new RegExp('(' + delimiters.map((x) => escapeRegex(x.left)).join('|') + ')');\n\n  while (true) {\n    index = text.search(regexLeft);\n    if (index === -1) {\n      break;\n    }\n    if (index > 0) {\n      data.push({\n        type: 'text',\n        data: text.slice(0, index),\n      });\n      text = text.slice(index); // now text starts with delimiter\n    }\n    // ... so this always succeeds:\n    const i = delimiters.findIndex((delim) => text.startsWith(delim.left));\n    index = findEndOfMath(delimiters[i].right, text, delimiters[i].left.length);\n    if (index === -1) {\n      break;\n    }\n    const rawData = text.slice(0, index + delimiters[i].right.length);\n    const math = amsRegex.test(rawData) ? rawData : text.slice(delimiters[i].left.length, index);\n    data.push({\n      type: 'math',\n      data: math,\n      rawData,\n      display: delimiters[i].display,\n    });\n    text = text.slice(index + delimiters[i].right.length);\n  }\n\n  if (text !== '') {\n    data.push({\n      type: 'text',\n      data: text,\n    });\n  }\n\n  return data;\n};\n\nexport default splitAtDelimiters;\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\nimport splitAtDelimiters from './splitAtDelimiters';\n\nconst replaceDelimitersInText = function (text, options) {\n  const data = splitAtDelimiters(text, options.splitAtDelimiters);\n\n  if (data.length === 1 && data[0].type === 'text') {\n    // There is no formula in the text.\n    // Let's return null which means there is no need to replace\n    // the current text node with a new one.\n    return null;\n  }\n\n  const fragment = document.createDocumentFragment();\n\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].type === 'text') {\n      fragment.appendChild(document.createTextNode(data[i].data));\n    } else {\n      const span = document.createElement('span');\n      const math = data[i].data;\n      const displayMode = data[i].display === true;\n      const delimiter = displayMode ? options.primaryBlockDelimiter : options.primaryInlineDelimiter;\n\n      span.textContent = delimiter['left'] + math + delimiter['right'];\n\n      fragment.appendChild(span);\n    }\n  }\n\n  return fragment;\n};\n\n/**\n * We'll match with math expressions and replace their\n * BBCode delimiters `[math]...[/math]` with their aliases `($$...$$)`.\n * This function should only be called when we set the\n * `aliases_as_primary` setting to true from the settings page.\n *\n * @param elem    The element that we are looking for math expressions in it.\n * @param options Contains primary replacer delimiter information.\n *\n * @return { string }\n */\nconst delimiterReplacer = function (elem, options, returnAsText) {\n  for (let i = 0; i < elem.childNodes.length; i++) {\n    const childNode = elem.childNodes[i];\n\n    if (childNode.nodeType === 3) {\n      // Text node\n      const frag = replaceDelimitersInText(childNode.textContent, options);\n\n      if (frag) {\n        i += frag.childNodes.length - 1;\n        elem.replaceChild(frag, childNode);\n      }\n    } else if (childNode.nodeType === 1) {\n      delimiterReplacer(childNode, options);\n    }\n    // Otherwise, it's something else, and ignore it.\n  }\n\n  return returnAsText === true ? elem.innerText : elem;\n};\n\nexport default delimiterReplacer;\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extend, override } from 'flarum/common/extend';\n\nimport app from 'flarum/common/app';\nimport Page from 'flarum/common/components/Page';\nimport TextEditor from 'flarum/common/components/TextEditor';\n\nimport addCopyListener from './addCopyListener';\nimport addPostQuoteButton from './addPostQuoteButton';\nimport addTextEditorButton from './addTextEditorButton';\nimport delimiterReplacer from './utils/katex/delimiterReplacer';\nimport getPrimaryDelimiters from './utils/katex/getPrimaryDelimiters';\nimport getFlarumComposers from './utils/getFlarumComposers';\n\napp.initializers.add(\n  'the-turk-mathren',\n  () => {\n    /**\n     * Replaces delimiters within a text.\n     *\n     * @param text    Text that has delimiters to replace.\n     *                Might contain line breaks in it.\n     * @param reverse True if we're replacing delimiters from\n     *                BBCode `[math]...[/math]` to aliases `$$...$$`.\n     *\n     * @return { string }\n     **/\n    const replaceDelimiters = (text = '', reverse = false, returnAsText = true) => {\n      const span = document.createElement('span');\n\n      // using `span.innerText` destroys line breaks\n      // using `span.innerHTML` introduces security concerns\n      span.textContent = text;\n\n      return delimiterReplacer(span, delimiterReplacerOptions(reverse), returnAsText);\n    };\n\n    /**\n     * Wrapping expressions with `code` should preserve alias delimiters\n     * if `aliases_as_primary` set to true.\n     *\n     * @param element The element that we're seeking code nodes inside.\n     *\n     * @see https://github.com/the-turk/flarum-mathren/issues/27\n     * @see https://github.com/s9e/TextFormatter/issues/166\n     **/\n    const preserveAliasesInCodeTag = (element) => {\n      if (!app.forum.attribute('mathren.aliases_as_primary')) return;\n\n      const codeNodeList = element.querySelectorAll('code');\n\n      // using `c.innerText` destroys line breaks\n      // using `c.innerHTML` introduces security concerns\n      codeNodeList.forEach((c) => {\n        // don't break code highlighting\n        if (c.classList.contains('hljs')) return;\n\n        c.textContent = replaceDelimiters(c.textContent, true);\n      });\n    };\n\n    /**\n     * Options those will be used in `delimiterReplacer()` function.\n     *\n     * @param reverse True if we're replacing delimiters from\n     *                BBCode `[math]...[/math]` to aliases `$$...$$`.\n     *\n     * @return { Object }\n     **/\n    const delimiterReplacerOptions = (reverse = false) => {\n      const primaryDelimiters = getPrimaryDelimiters.bind(this, app.forum, !reverse)();\n      const bbDelimiters = app.forum.attribute('mathren.bbcode_delimiters');\n      const explicitBBDelimiters = app.forum.attribute('mathren.explicit_bbcode_delimiters');\n      const aliasDelimiters = app.forum.attribute('mathren.alias_delimiters');\n      const splitAtDelimiters = reverse ? bbDelimiters.concat(explicitBBDelimiters) : aliasDelimiters;\n\n      return {\n        primaryBlockDelimiter: primaryDelimiters.block,\n        primaryInlineDelimiter: primaryDelimiters.inline,\n        splitAtDelimiters,\n      };\n    };\n\n    /**\n     * Show a quote button when post text is selected.\n     *\n     * We have to run KaTeX's copy-tex plugin on the selected post\n     * for returning the source of KaTeX expression when the user clicks\n     * the \"Quote\" button (which comes with the `flarum/mentions` extension).\n     * To achieve that, we need to modify the extension's `selectedText` function.\n     * Doing that from another extension seems not possible at the moment, so\n     * all we do is replicate its \"Quote\" button functions and showing our\n     * button instead of theirs.\n     **/\n    addPostQuoteButton();\n\n    // Add text editor buttons.\n    addTextEditorButton();\n\n    // Hook into global copy handler to modify behavior on `.katex` elements.\n    addCopyListener();\n\n    extend(Page.prototype, ['oncreate', 'onupdate'], () => preserveAliasesInCodeTag(document));\n\n    // Replace alias delimiters with BBCode delimiters in preview mode\n    // so the `TextFormatter` can render them using BBCode definitions.\n    if (s9e && s9e.TextFormatter) {\n      override(s9e.TextFormatter, 'preview', function (original, preview, element) {\n        original(replaceDelimiters(preview), element);\n        preserveAliasesInCodeTag(element);\n      });\n    }\n\n    // Replace alias delimiters with BBCode delimiters `onsubmit`\n    // because they must be saved with BBCode delimiters. Keep in mind that\n    // we strictly need BBCode tags (and their `ignoreTags()` method) to support Markdown.\n    getFlarumComposers().forEach((composer) => {\n      override(composer.prototype, 'onsubmit', function (original) {\n        this.composer.fields.content(replaceDelimiters(this.composer.fields.content()));\n        original();\n      });\n    });\n\n    // Replace BBCode delimiters with alias delimiters if `aliases_as_primary` set to true.\n    extend(TextEditor.prototype, 'oncreate', function (original, vnode) {\n      const $textarea = vnode.dom.querySelector('textarea');\n      const composerClass = app.composer.body.componentClass;\n\n      if (getFlarumComposers().indexOf(composerClass) === -1) {\n        // If this isn't a native Flarum composer (i.e. it created by an extension)\n        // then we will replace alias delimiters with BBCode ones on the fly.\n        // Because it seems there is no way to manipulate their `onsubmit` call\n        // as we did for native Flarum composers above.\n        $textarea.addEventListener('input', function () {\n          $textarea.value = replaceDelimiters($textarea.value);\n        });\n      } else {\n        // This is a native Flarum composer and its BBCode delimiters should be\n        // replaced with alias delimiters if `aliases_as_primary` set to true.\n        // This will take effect on the `EditPostComposer` only at this point\n        // because other native composers are empty by default.\n        if (!app.forum.attribute('mathren.aliases_as_primary')) return;\n        $textarea.value = replaceDelimiters(this.value, true);\n      }\n    });\n  },\n  -500 // since we're overriding things...\n);\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Stichting Flarum (Flarum Foundation), Toby Zerner (toby.zerner@gmail.com).\n * Licensed under the MIT License. See license text at https://github.com/flarum/mentions/blob/master/LICENSE.\n */\n\nimport { extend } from 'flarum/common/extend';\nimport CommentPost from 'flarum/common/components/CommentPost';\n\nimport copyDelimiters from './utils/katex/copyDelimiters';\nimport getPrimaryDelimiters from './utils/katex/getPrimaryDelimiters';\nimport selectedText from './utils/mentions/selectedText';\n\nexport default function addPostQuoteButton() {\n  extend(CommentPost.prototype, 'oncreate', function () {\n    // \"flarum-mentions\" is required for showing the Quote button.\n    // Main cause of this, the user may not want to use Quote button Flarum-wide.\n    // If they using \"flarum-mentions\" then they're okay with that button.\n    if (!('flarum-mentions' in flarum.extensions) || !app.forum.attribute('mathren.enable_copy_tex')) return;\n\n    const PostQuoteButton = require('flarum/mentions/fragments/PostQuoteButton');\n\n    const post = this.attrs.post;\n    const delimiters = getPrimaryDelimiters.bind(this, app.forum)();\n\n    if (post.isHidden() || (app.session.user && !post.discussion().canReply())) return;\n\n    const $postBody = this.$('.Post-body');\n\n    // Wrap the quote button in a wrapper element so that we can render\n    // button into it.\n    const $container = $('<div class=\"MathRen-quoteButtonContainer\"></div>');\n\n    const button = new PostQuoteButton(post);\n\n    const handler = function (e) {\n      setTimeout(() => {\n        const content = selectedText($postBody, copyDelimiters(delimiters));\n        if (content) {\n          button.content = content;\n          m.render($container[0], button.render());\n\n          const rects = window.getSelection().getRangeAt(0).getClientRects();\n          const firstRect = rects[0];\n\n          if (e.clientY < firstRect.bottom && e.clientX - firstRect.right < firstRect.left - e.clientX) {\n            button.showStart(firstRect.left, firstRect.top);\n          } else {\n            const lastRect = rects[rects.length - 1];\n            button.showEnd(lastRect.right, lastRect.bottom);\n          }\n        }\n      }, 1);\n    };\n\n    this.$().after($container).on('mouseup', handler);\n\n    if ('ontouchstart' in window) {\n      document.addEventListener('selectionchange', handler, false);\n    }\n  });\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Stichting Flarum (Flarum Foundation), Toby Zerner (toby.zerner@gmail.com).\n * Licensed under the MIT License. See license text at https://github.com/flarum/mentions/blob/master/LICENSE.\n */\n\nimport katexReplaceWithTex from '../katex/katex2tex';\nimport setKatexRange from '../katex/setKatexRange';\n\nexport default function selectedText(body, copyDelimiters) {\n  const selection = window.getSelection();\n\n  if (!selection.isCollapsed) {\n    const range = selection.getRangeAt(0);\n    const parent = range.commonAncestorContainer;\n\n    if (body[0] === parent || $.contains(body[0], parent)) {\n      setKatexRange(range);\n\n      let fragment = range.cloneContents();\n\n      if (fragment.querySelector('.katex-mathml')) {\n        fragment = katexReplaceWithTex(fragment, copyDelimiters).textContent;\n      }\n\n      const clone = $('<div>').append(fragment);\n\n      // Replace emoji images with their shortcode (found in alt attribute)\n      clone.find('img.emoji').replaceWith(function () {\n        return this.alt;\n      });\n\n      // Replace all other images with a Markdown image\n      clone.find('img').replaceWith(function () {\n        return `![](${this.src})`;\n      });\n\n      // Replace all links with a Markdown link\n      clone.find('a').replaceWith(function () {\n        return `[${this.innerText}](${this.href})`;\n      });\n\n      return clone.text();\n    }\n  }\n  return '';\n}\n","/*\n * This file is part of MathRen.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nimport { extend } from 'flarum/common/extend';\nimport TextEditor from 'flarum/components/TextEditor';\n\nimport TextEditorButton from './components/TextEditorButton';\n\nexport default function addTextEditorButton() {\n  extend(TextEditor.prototype, 'toolbarItems', function (items) {\n    if (app.forum.attribute('mathren.enable_editor_buttons') === true) {\n      items.add('the-turk-mathren', <TextEditorButton textEditor={this.attrs.composer.editor} />);\n    }\n  });\n}\n","/*\n * This file is part of MathRen.\n *\n * Original Copyright Khan Academy. Licensed under the MIT License.\n * See license text at https://github.com/KaTeX/KaTeX/blob/master/LICENSE.\n */\n\nimport { extend } from 'flarum/common/extend';\nimport DiscussionPage from 'flarum/common/components/DiscussionPage';\n\nimport copyDelimiters from './utils/katex/copyDelimiters';\nimport katexReplaceWithTex from './utils/katex/katex2tex';\nimport getPrimaryDelimiters from './utils/katex/getPrimaryDelimiters';\nimport setKatexRange from './utils/katex/setKatexRange';\n\nexport default function addCopyListener() {\n  extend(DiscussionPage.prototype, 'oncreate', function () {\n    if (!app.forum.attribute('mathren.enable_copy_tex')) return;\n\n    const delimiters = getPrimaryDelimiters.bind(this, app.forum)();\n\n    // Global copy handler to modify behavior on .katex elements.\n    document.addEventListener('copy', function (event) {\n      const selection = window.getSelection();\n\n      if (selection.isCollapsed || !event.clipboardData) {\n        return; // default action OK if selection is empty or unchangeable\n      }\n      const clipboardData = event.clipboardData;\n      const range = selection.getRangeAt(0);\n\n      setKatexRange(range);\n\n      const fragment = range.cloneContents();\n\n      if (!fragment.querySelector('.katex-mathml')) {\n        return; // default action OK if no .katex-mathml elements\n      }\n\n      const htmlContents = Array.prototype.map.call(fragment.childNodes, (el) => (el instanceof Text ? el.textContent : el.outerHTML)).join('');\n\n      // Preserve usual HTML copy/paste behavior.\n      clipboardData.setData('text/html', htmlContents);\n      // Rewrite plain-text version.\n      clipboardData.setData('text/plain', katexReplaceWithTex(fragment, copyDelimiters(delimiters)).textContent);\n      // Prevent normal copy handling.\n      event.preventDefault();\n    });\n  });\n}\n"],"names":["module","exports","flarum","core","compat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","copyDelimiters","delimiters","inline","left","right","display","block","fragment","katexHtml","querySelectorAll","i","length","element","remove","parentNode","removeChild","katexMathml","texSource","querySelector","replaceWith","replaceChild","innerHTML","displays","substr","getPrimaryDelimiters","forum","reverse","attribute","closestKatex","node","Element","parentElement","closest","setKatexRange","range","startKatex","startContainer","setStartBefore","endKatex","endContainer","setEndAfter","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","getFlarumComposers","DiscussionComposer","EditPostComposer","ReplyComposer","TextEditorButton","subClass","superClass","create","constructor","view","Dropdown","className","buttonClassName","label","icon","this","items","toArray","ItemList","add","Button","onclick","wrapSelection","app","displayMode","composerClass","indexOf","leftDelim","rightDelim","selectionRange","attrs","textEditor","getSelectionRange","insertAt","replaceBeforeCursor","moveCursorTo","Component","findEndOfMath","delimiter","text","startIndex","index","braceLevel","delimLength","character","slice","amsRegex","replaceDelimitersInText","options","data","regexLeft","RegExp","map","x","replace","join","search","push","type","findIndex","delim","startsWith","rawData","math","test","splitAtDelimiters","document","createDocumentFragment","appendChild","createTextNode","span","createElement","primaryBlockDelimiter","primaryInlineDelimiter","textContent","delimiterReplacer","elem","returnAsText","childNodes","childNode","nodeType","frag","innerText","replaceDelimiters","delimiterReplacerOptions","preserveAliasesInCodeTag","forEach","c","classList","contains","primaryDelimiters","bbDelimiters","explicitBBDelimiters","aliasDelimiters","concat","extend","CommentPost","extensions","PostQuoteButton","require","post","isHidden","session","user","discussion","canReply","$postBody","$","$container","button","handler","e","setTimeout","content","body","selection","window","getSelection","isCollapsed","getRangeAt","parent","commonAncestorContainer","cloneContents","katexReplaceWithTex","clone","append","find","alt","src","href","selectedText","m","render","rects","getClientRects","firstRect","clientY","bottom","clientX","showStart","top","lastRect","showEnd","after","on","addEventListener","TextEditor","composer","editor","DiscussionPage","event","clipboardData","htmlContents","Array","el","Text","outerHTML","setData","preventDefault","Page","s9e","TextFormatter","override","original","preview","fields","vnode","$textarea","dom"],"sourceRoot":""}