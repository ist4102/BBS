{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,kC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCGxDC,IAAAA,aAAAA,IAAqB,oBAAoB,YCQvCC,EAAAA,EAAAA,QAAOC,IAAAA,UAAqB,eAAe,SAAUC,GACnD,GAAKH,IAAAA,MAAAA,UAAoB,uCAAzB,CAIIG,EAAMC,IAAI,YAAYD,EAAME,YAAY,UAAW,KACnDF,EAAMC,IAAI,kBAAkBD,EAAME,YAAY,gBAAiB,IAEnE,IAAMC,EAASN,IAAAA,MAAAA,UAAoB,wCAE/BO,EAAMP,IAAAA,MAAAA,UAAoB,WAAa,IAAMM,EAE7C,gBAAiBT,OAAOW,YAAcC,KAAKC,eAC7CH,EAAMA,EAAM,MAAQE,KAAKC,aAAaC,QAGxCR,EAAMS,IAAI,WAAY,EAAC,IAAD,CAAYC,KAAK,aAAaC,UAAU,sBAAsBC,KAAMR,EAAKS,OAAO,WAAa,UAGrHf,EAAAA,EAAAA,QAAOgB,IAAoB,gBAAgB,SAAUd,EAAmCe,GACtF,GAAKlB,IAAAA,MAAAA,UAAoB,uCAAzB,CAIA,IAAMM,EAASN,IAAAA,MAAAA,UAAoB,wCAEnCG,EAAMS,IACJ,WACA,EAAC,IAAD,CAAYC,KAAK,aAAaE,KAAMf,IAAAA,MAAAA,UAAoB,WAApB,IAAqCM,EAArC,MAAmDY,EAAWC,KAAMC,UAAU,EAAMJ,OAAO,UAC5HhB,IAAAA,WAAAA,MAAqB,yD","sources":["webpack://@ianm/syndication/webpack/bootstrap","webpack://@ianm/syndication/webpack/runtime/compat get default export","webpack://@ianm/syndication/webpack/runtime/define property getters","webpack://@ianm/syndication/webpack/runtime/hasOwnProperty shorthand","webpack://@ianm/syndication/webpack/runtime/make namespace object","webpack://@ianm/syndication/external root \"flarum.core.compat['forum/app']\"","webpack://@ianm/syndication/external root \"flarum.core.compat['common/extend']\"","webpack://@ianm/syndication/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@ianm/syndication/external root \"flarum.core.compat['forum/utils/DiscussionControls']\"","webpack://@ianm/syndication/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@ianm/syndication/./src/forum/index.ts","webpack://@ianm/syndication/./src/forum/addFeedIcons.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/DiscussionControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","import app from 'flarum/forum/app';\nimport addFeedIcons from './addFeedIcons';\n\napp.initializers.add('ianm-syndication', () => {\n  addFeedIcons();\n});\n","import ItemList from 'flarum/common/utils/ItemList';\nimport app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport type Mithril from 'mithril';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport DiscussionControls from 'flarum/forum/utils/DiscussionControls';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport Discussion from 'flarum/common/models/Discussion';\n\nexport default function addFeedIcons() {\n  extend(IndexPage.prototype, 'actionItems', function (items: ItemList<Mithril.Children>) {\n    if (!app.forum.attribute('ianm-syndication.plugin.forum-icons')) {\n      return;\n    }\n\n    if (items.has('refresh')) items.setPriority('refresh', 100);\n    if (items.has('markAllAsRead')) items.setPriority('markAllAsRead', 90);\n\n    const format = app.forum.attribute('ianm-syndication.plugin.forum-format');\n\n    let url = app.forum.attribute('baseUrl') + '/' + format;\n\n    if ('flarum-tags' in flarum.extensions && this.currentTag()) {\n      url = url + '/t/' + this.currentTag().slug();\n    }\n\n    items.add('rss-feed', <LinkButton icon=\"fas fa-rss\" className=\"Button Button--icon\" href={url} target=\"_blank\" />, 105);\n  });\n\n  extend(DiscussionControls, 'userControls', function (items: ItemList<Mithril.Children>, discussion: Discussion) {\n    if (!app.forum.attribute('ianm-syndication.plugin.forum-icons')) {\n      return;\n    }\n\n    const format = app.forum.attribute('ianm-syndication.plugin.forum-format');\n\n    items.add(\n      'rss-link',\n      <LinkButton icon=\"fas fa-rss\" href={app.forum.attribute('baseUrl') + `/${format}/d/` + discussion.id()} external={true} target=\"_blank\">\n        {app.translator.trans('ianm-syndication.forum.discussion.feed_link')}\n      </LinkButton>\n    );\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","extend","IndexPage","items","has","setPriority","format","url","extensions","this","currentTag","slug","add","icon","className","href","target","DiscussionControls","discussion","id","external"],"sourceRoot":""}